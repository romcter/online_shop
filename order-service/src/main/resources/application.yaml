spring.application.name: order-service

server:
  port : 8081

spring:

  datasource:
    url: jdbc:h2:mem:order;DB_CLOSE_ON_EXIT=FALSE
    driverClassName: org.h2.Driver
    username: username
    password: password
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    defer-datasource-initialization: true
    hibernate:
      ddl-auto=create-drop: create-drop
  h2:
    console.enabled: true


  kafka:
    bootstrap:
      servers: 'localhost:9092'
#    #  bootstrap-servers: 127.0.0.1:56820
    consumer:
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
#            type:
#              mapping: event:com.design.orderservice.service.Dto
            add:
              type:
                headers: false
  #        spring:
#          deserializer:
#            value:
#              delegate:
#                class: org.springframework.kafka.support.serializer.JsonDeserializer
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer


  spring.output.ansi.enabled: ALWAYS

  logging.pattern.console: "%clr(%d{HH:mm:ss.SSS}){blue} %clr(---){faint} %clr([%15.15t]){yellow} %clr(:){red} %clr(%m){faint}%n"