version: '3'
services:

  user-service:
    container_name: user-service
    ports:
      - 8082:8082
    expose:
      - 8082
    build: ./user-service/
    restart: on-failure

  media-service:
    container_name: media-service
    ports:
      - 8084:8084
    build: ./media-service/
    restart: on-failure
    links:
      - mongo
    depends_on:
      - mongo
    environment:
      - HOST_NAME=mongo

  product-service:
    container_name: product-service
    ports:
      - 8083:8083
    expose:
      - 8083
      - 8084
    build: ./product-service/
    restart: on-failure
    environment:
      - PORT=8083
      - MEDIA_SERVICE_URL=http://media-service:8084

  mongo:
    ports:
      - '27017:27017'
    container_name: dkrcomp-mongo
    restart: always
    logging:
      options:
        max-size: 1g
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=bdung
    image: mongo

  postgresDb:
    image: postgres:13.2
    container_name: docker-postgres-db
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=spring_boot_postgres_db

  zookeeper:
    image: bitnami/zookeeper:latest
    restart: always
    ports:
      - 2181:2181
    expose:
      - 2181
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2

  kafka:
    image: bitnami/kafka:latest
    restart: always
    ports:
      - 9092:9092
      - 9093:9093
    expose:
      - 9092
      - 9093
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_CFG_LISTENERS=PLAINTEXT: //:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://localhost:9092,EXTERNAL://localhost:9093
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: CLIENT://:9092,EXTERNAL://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: CLIENT
      ALLOW_PLAINTEXT_LISTENER: 'yes'

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - user-service
    links:
      - user-service
    ports:
      - 80:80

  elastic-search:
    image: elasticsearch:7.14.1
    container_name: elasticsearch
    restart: always
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node

  kibana:
    image: kibana:7.14.1
    container_name: kibana
    restart: always
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elastic-search:9200

  logstash:
    image: logstash:7.14.1
    container_name: logstash
    restart: always
    ports:
      - "5001:5003"
      - "5044:5044"
      - "9600:9600"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    environment:
      - XPACK_MONITORING_ELASTICSEARCH_HOSTS=http://elastic-search:9200
      - XPACK_MONITORING_ENABLED=true